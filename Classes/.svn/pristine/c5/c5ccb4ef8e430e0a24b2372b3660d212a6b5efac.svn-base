//
//  ProductsInformationController.m
//  PSA
//
//  Created by Michael Simone on 7/15/09.
//  Copyright 2009 Dropped Pin. All rights reserved.
//

#import "ProductsInformationController.h"


@implementation ProductsInformationController

@synthesize appDelegate, myTableView, myPickerView, nameControl, priceControl, amountControl, vendorControl;

- (IBAction)cancel:(id)sender {
	[self.view removeFromSuperview];
}

- (IBAction)save:(id)sender {
	
	//Temp hack until I get the calendar up and running
	appDelegate.productLastSoldDate = [NSString stringWithFormat:@"today"];
	// Write out the info to the database
	[appDelegate saveProduct];
	[self.view removeFromSuperview];
}

#pragma mark UIViewController

- (void)viewWillAppear:(BOOL)animated
{	
	NSIndexPath *tableSelection = [myTableView indexPathForSelectedRow];
	[myTableView deselectRowAtIndexPath:tableSelection animated:NO];
	[myTableView reloadData];
	
}

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
	
	// Use the delegate to set/get values
	appDelegate = (PSAAppDelegate *)[[UIApplication sharedApplication] delegate];
	
	// Set the background color to a nice blue image
	self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"PSA_Blue.png"]];
	self.myTableView.backgroundColor = [UIColor clearColor];
	
	appDelegate.productTypeDescription = @"";
	appDelegate.productName = @"";
	appDelegate.vendorName = @"";
	
	[super viewDidLoad];
}

- (void)didReceiveMemoryWarning {
	// Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
	
	// Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
	// Release any retained subviews of the main view.
	// e.g. self.myOutlet = nil;
}


- (void)dealloc {
    [super dealloc];
}

#pragma mark TableViewDelegate

- (UITableViewCell *)tableView:(UITableView *)aTableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [myTableView dequeueReusableCellWithIdentifier:@"TypeCell"];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:@"TypeCell"] autorelease];
    }
	
	cell.textLabel.font = [UIFont italicSystemFontOfSize:16];
	cell.accessoryType = UITableViewCellAccessoryDisclosureIndicator;
	

	switch (indexPath.row) {
		case 0:
			cell.textLabel.text = [NSString stringWithFormat:@"Product Type:  %@", appDelegate.productTypeDescription];
			break;
		case 1:
			cell.textLabel.text = [NSString stringWithFormat:@"Product Name:  %@", appDelegate.productName];
			break;
		case 2:
			cell.textLabel.text =[NSString stringWithFormat: @"Product Number:  %i", appDelegate.productNumber];
			break;
		case 3:
			cell.textLabel.text = [NSString stringWithFormat:@"Cost:  $%.2f", [appDelegate.productCost floatValue]];
			break;
		case 4:
			cell.textLabel.text = [NSString stringWithFormat:@"Price:  $%.2f", [appDelegate.productPrice floatValue]];
			break;
		case 5:
			cell.textLabel.text = [NSString stringWithFormat:@"Product Minimum:  %i", appDelegate.productMin];
			break;
		case 6:
			cell.textLabel.text = [NSString stringWithFormat:@"Product Maximum:  %i", appDelegate.productMax];
			break;
		case 7:
			cell.textLabel.text = [NSString stringWithFormat:@"Product On Hand:  %i", appDelegate.productOnHand];
			break;
		case 8:
			cell.textLabel.text = [NSString stringWithFormat:@"Vendor:  %@", appDelegate.vendorName];
			break;
		case 9:
			cell.textLabel.text = [NSString stringWithFormat:@"Last Date Sold:  %i", appDelegate.productLastSoldDate];
			break;
		case 10:
			cell.textLabel.text = [NSString stringWithFormat:@"Taxable:"];
			break;
	}
	
	return cell;
}

// The table has one row for each possible type.
- (NSInteger)tableView:(UITableView *)aTableView numberOfRowsInSection:(NSInteger)section {
	return 10;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{		
	// don't keep the table selection
	[tableView deselectRowAtIndexPath:indexPath animated:YES];
	
	// Load the picker NIB file
	if (myPickerView == nil) {
		myPickerView = [[ProductPicker alloc] initWithNibName:@"ProductPicker" bundle:[NSBundle mainBundle]];
		myPickerView.productsController = self;
	}
	
	// Load the product name NIB file
	if (nameControl == nil) {
		nameControl = [[ProductNameController alloc] initWithNibName:@"ProductNameView" bundle:[NSBundle mainBundle]];
		nameControl.productsController = self;
	}
	
	// Load the product price NIB file
	if (priceControl == nil) {
		priceControl = [[ProductPriceController alloc] initWithNibName:@"ProductPriceView" bundle:[NSBundle mainBundle]];
		priceControl.productsController = self;
	}
	
	// Load the product amounts NIB file
	if (amountControl == nil) {
		amountControl = [[ProductAmountController alloc] initWithNibName:@"ProductAmountView" bundle:[NSBundle mainBundle]];
		amountControl.productsController = self;
	}
	
	if (vendorControl == nil) {
		vendorControl = [[VendorViewController alloc] initWithNibName:@"VendorView" bundle:[NSBundle mainBundle]];
		vendorControl.productsController = self;
	}

	switch (indexPath.row) {
		case 0:
			[myPickerView.myPickerView reload];
			[self.view addSubview:myPickerView.view];
			break;
		case 1:
			[self.view addSubview:nameControl.view];
			break;
		case 2:
			[self.view addSubview:nameControl.view];
			break;
		case 3:
			[self.view addSubview:priceControl.view];
			break;
		case 4:
			[self.view addSubview:priceControl.view];
			break;
		case 5:
			[self.view addSubview:amountControl.view];
			break;
		case 6:
			[self.view addSubview:amountControl.view];
			break;
		case 7:
			[self.view addSubview:amountControl.view];
			break;
		case 8:
			[self.view addSubview:vendorControl.view];
			break;
		case 9:
			//[self.view addSubview:priceControl.view];
			break;
	}
	
}

@end
