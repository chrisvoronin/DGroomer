//
//  GCReportViewController.m
//  PSA
//
//  Created by Michael Simone on 9/1/09.
//  Copyright 2009 Dropped Pin. All rights reserved.
//

#import "GCReportViewController.h"
#import "GiftCertificate.h"

@interface GCReportViewController (Private)
- (void)sendEmail;
@end

@implementation GCReportViewController

@synthesize appDelegate, myTableView;

- (IBAction)back:(id)sender {
	[self.view removeFromSuperview];
}

- (IBAction)email:(id)sender {
	// Open the email alert sheet
	// open a dialog with two custom buttons
	UIActionSheet *actionSheet = [[UIActionSheet alloc] initWithTitle:@"Email Report"
															 delegate:self cancelButtonTitle:@"Cancel" destructiveButtonTitle:nil
													otherButtonTitles:@"Use Email", nil];
	actionSheet.actionSheetStyle = UIActionSheetStyleDefault;
	[actionSheet showInView:self.view];
	[actionSheet release];
}

// Called when the user selects an option in the sheet. The sheet will automatically be dismissed.
- (void)actionSheet:(UIActionSheet *)actionSheet willDismissWithButtonIndex:(NSInteger)buttonIndex {
    switch (buttonIndex) {
        case 0: {
			// Email the report to the company address
        } break;
        default:
            break;
    }
}

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
	// Use the delegate to set/get values
	appDelegate = (PSAAppDelegate *)[[UIApplication sharedApplication] delegate];
	
	// Set the background color to an image
	self.view.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"PSA_Productpurple.png"]];
	myTableView.backgroundColor = [UIColor clearColor];
		
    [super viewDidLoad];
}


// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}

- (void)didReceiveMemoryWarning {
	// Releases the view if it doesn't have a superview.
    [super didReceiveMemoryWarning];
	
	// Release any cached data, images, etc that aren't in use.
}

- (void)viewDidUnload {
	// Release any retained subviews of the main view.
	// e.g. self.myOutlet = nil;
}


- (void)dealloc {
	[myTableView release];
    [super dealloc];
}

#pragma mark TableViewDelegate

- (UITableViewCell *)tableView:(UITableView *)aTableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [myTableView dequeueReusableCellWithIdentifier:@"TypeCell"];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:@"TypeCell"] autorelease];
    }
	
	cell.textLabel.font = [UIFont italicSystemFontOfSize:14];
	cell.accessoryType = UITableViewCellAccessoryNone;

	// Load the gift certificates for display
	[appDelegate loadGiftCertificate];
	
	GiftCertificate *giftCert = nil;
	
	for (int i = 0; i < [appDelegate.giftCertificates count]; i++) {
		giftCert = [appDelegate.giftCertificates objectAtIndex:indexPath.row];
		cell.textLabel.text = [NSString stringWithFormat:@"%i      %@     %.2f         %.2f", giftCert.giftCertificateNumber, giftCert.expirationDate, [giftCert.currentValue floatValue], [giftCert.originalValue floatValue]];
	}
	
	return cell;
}

// The table has one row for each possible type.
- (NSInteger)tableView:(UITableView *)aTableView numberOfRowsInSection:(NSInteger)section {
	[appDelegate loadGift];
	
	return [appDelegate.giftCertificates count];
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{		
	// don't keep the table selection
	[tableView deselectRowAtIndexPath:indexPath animated:YES];
}
	
@end
