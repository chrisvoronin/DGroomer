//
//  Transaction.m
//  PSA
//
//  Created by Michael Simone on 7/27/09.
//  Copyright 2009 Dropped Pin. All rights reserved.
//

#import "Transaction.h"

// Static variables for compiled SQL queries. This implementation choice is to be able to share a one time
// compilation of each query across all instances of the class. Each time a query is used, variables may be bound
// to it, it will be "stepped", and then reset for the next usage. When the application begins to terminate,
// a class method will be invoked to "finalize" (delete) the compiled queries - this must happen before the database
// can be closed.
static sqlite3_stmt *init_statement = nil;
static sqlite3_stmt *hydrate_statement = nil;

@implementation Transaction

@synthesize transactionID, transactionNumber, transactionDate, transactionStatus, transactionTotal, transactionDiscountTotal;
@synthesize transactionTaxTotal, transactionPaymentTotal, transactionTipTotal, transactionChangeTotal, transactionSubTotal;

// Finalize (delete) all of the SQLite compiled queries.
+ (void)finalizeStatements {
    if (init_statement) {
        sqlite3_finalize(init_statement);
        init_statement = nil;
    }
    if (hydrate_statement) {
        sqlite3_finalize(hydrate_statement);
        hydrate_statement = nil;
	}
}

- (id)initWithTransactionData:(NSInteger)transID transNum:(NSInteger)transNum transDate:(NSString*)transDate transStatus:(NSString*)transStatus transTotal:(NSNumber*)transTotal discTotal:(NSNumber*)discTotal taxTotal:(NSNumber*)taxTotal payTotal:(NSNumber*)payTotal tipTotal:(NSNumber*)tipTotal chgTotal:(NSNumber*)chgTotal subTotal:(NSNumber*)subTotal {
	self.transactionID = transID;
	self.transactionNumber = transNum;
	self.transactionDate = transDate;
	self.transactionStatus = transStatus;
	self.transactionTotal = transTotal;
	self.transactionDiscountTotal = discTotal;
	self.transactionTaxTotal = taxTotal;
	self.transactionPaymentTotal = payTotal;
	self.transactionTipTotal = tipTotal;
	self.transactionChangeTotal = chgTotal;
	self.transactionSubTotal= subTotal;
	
	return self;
}

@end
