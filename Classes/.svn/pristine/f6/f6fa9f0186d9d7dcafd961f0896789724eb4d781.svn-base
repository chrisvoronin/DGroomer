//
//  DayViewController.m
//  PSA
//
//  Created by Michael Simone on 3/5/09.
//  Copyright Dropped Pin 2009. All rights reserved.
//

#import "DayViewController.h"
#import "FirstViewController.h"


@implementation DayViewController

- (IBAction)cancel:(id)sender {
	[self.view removeFromSuperview];
}

// Get the correct nib loaded depending on which action the user wants to take
- (IBAction)getCalendarEvent:(id)sender {
	
	switch ([sender selectedSegmentIndex])
	{
		case 0:	// Day
		{
			// Load the calendar day nib file
			[self.view addSubview:[FirstViewController FirstViewSharedController].dayController.view];
			break;
		}
		case 1: // Week
		{	
			// Load the calendar week nib file
			[self.view addSubview:[FirstViewController FirstViewSharedController].weekController.view];
			break;
		}
		case 2:	// Month
		{
			// Load the calendar month nib file
			[self.view addSubview:[FirstViewController FirstViewSharedController].monthController.view];
			break;
		}
	}
}

- (IBAction)getCurrentDay:(id)sender {
	
	NSDate *date =[NSDate date];
    NSLog(@"Get current day please");
}

// Invoked when the user touches Edit.
- (void)setEditing:(BOOL)editing animated:(BOOL)animated {
    // Updates the appearance of the Edit|Done button as necessary.
    [super setEditing:editing animated:animated];
    /*[self.tableView setEditing:editing animated:YES];
	 // Disable the add button while editing.
	 if (editing) {
	 self.navigationItem.rightBarButtonItem.enabled = NO;
	 } else {
	 self.navigationItem.rightBarButtonItem.enabled = YES;
	 }
	 */
}

- (IBAction)addAppointment:(id)sender {
	[self setEditing:YES animated:NO];
	
    // Load the appointment nib
	[self.view addSubview:[FirstViewController FirstViewSharedController].addApptController.view];
}

/*
// Implement loadView to create a view hierarchy programmatically, without using a nib.
- (void)loadView {
}
*/

// Implement viewDidLoad to do additional setup after loading the view, typically from a nib.
- (void)viewDidLoad {
    [[FirstViewController FirstViewSharedController] loadControllers];
}

- (void)viewWillAppear:(BOOL)animated {
	[super viewWillAppear:animated];
	
    // Remove any previous selection.
    NSIndexPath *tableSelection = [myTableView indexPathForSelectedRow];
	[myTableView deselectRowAtIndexPath:tableSelection animated:YES];
    [myTableView reloadData];
}


// Override to allow orientations other than the default portrait orientation.
- (BOOL)shouldAutorotateToInterfaceOrientation:(UIInterfaceOrientation)interfaceOrientation {
    // Return YES for supported orientations
    return (interfaceOrientation == UIInterfaceOrientationPortrait);
}


- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning]; // Releases the view if it doesn't have a superview
    // Release anything that's not essential, such as cached data
}


- (void)dealloc {
    [super dealloc];
}

#pragma mark TableDelegate methods

- (UITableViewCell *)tableView:(UITableView *)aTableView cellForRowAtIndexPath:(NSIndexPath *)indexPath {
    UITableViewCell *cell = [myTableView dequeueReusableCellWithIdentifier:@"TypeCell"];
    if (cell == nil) {
        cell = [[[UITableViewCell alloc] initWithFrame:CGRectZero reuseIdentifier:@"TypeCell"] autorelease];
    }
	
	cell.accessoryType = UITableViewCellAccessoryNone;
	cell.textLabel.textColor = [UIColor lightGrayColor];
	cell.textLabel.font = [UIFont boldSystemFontOfSize:12];
	cell.textLabel.textAlignment = UITextAlignmentCenter;
	cell.textLabel.text = @"No Appointments Scheduled for Today";
		
     return cell;
}

// The table has one row for each possible type.
- (NSInteger)tableView:(UITableView *)aTableView numberOfRowsInSection:(NSInteger)section {
	
	// This value will change once I implement the database calls
    return 1;
}

- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath
{		
	// don't keep the table selection
	[tableView deselectRowAtIndexPath:indexPath animated:YES];
}

- (NSString *)tableView:(UITableView *)tableView titleForHeaderInSection:(NSInteger)section {
	
	// Create a date formatter to convert the date to a string format.		
	NSDateFormatter *dateFormatter = [[[NSDateFormatter alloc] init] autorelease];
	[dateFormatter setDateStyle:NSDateFormatterFullStyle];
	
	NSDate *date =[NSDate date];			
	NSArray *daysOfTheWeek = [NSArray arrayWithObjects:[dateFormatter stringFromDate:date],nil];
	
	return [daysOfTheWeek objectAtIndex:section];
}

@end
